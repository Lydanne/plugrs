name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-smart-release
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-smart-release

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Create Release
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 首先进行预检查
          cargo smart-release \
            --dry-run-cargo-publish \
            --verbose \
            --update-crates-index

          # 如果检查通过，执行发布
          cargo smart-release \
            --execute \
            --allow-dirty \
            --update-crates-index \
            --no-changelog-preview \
            --capitalize-commit \
            --verbose
